#!/bin/bash

# pkg is a script for you to install OLA11 packages.
# you may install one using the install command or all of them using the all command.
# For instance, in order to install a noun, do ./pkg install nouns/first

URL="https://ola11-sources.herokuapp.com/"

DIR=$(realpath "$(dirname "$0")")

mkdir -p $DIR/../words/verbs
mkdir -p $DIR/../words/nouns

search() {
  if [ $# -eq 0 ]; then
    curl https://ola11-sources.herokuapp.com/verb.php 2>/dev/null | sed "s/sources\///g" | sed "s/\.php//g"
    curl https://ola11-sources.herokuapp.com/noun.php 2>/dev/null | sed "s/sources\///g" | sed "s/\.php//g"
  else
    curl https://ola11-sources.herokuapp.com/verb.php 2>/dev/null | sed "s/sources\///g" | sed "s/\.php//g" | grep "$1"
    curl https://ola11-sources.herokuapp.com/noun.php 2>/dev/null | sed "s/sources\///g" | sed "s/\.php//g" | grep "$1"
  fi
}

list() {
  if [ $# -eq 0 ]; then
    [ ! -f "$DIR/pkg.lock" ] || cat $DIR/pkg.lock
  else
    [ ! -f "$DIR/pkg.lock" ] || grep "$1" $DIR/pkg.lock
  fi
}

exists() {
  echo "checking verbs" 1>&2
  curl https://ola11-sources.herokuapp.com/verb.php 2>/dev/null | grep "sources/$1.php" >/dev/null
  if [ $? -ne 0 ]; then
    echo "checking nouns" 1>&2
    curl https://ola11-sources.herokuapp.com/noun.php 2>/dev/null | grep "sources/$1.php" >/dev/null
    [ $? -eq 0 ] && return 0
    return 1
  fi
  return 0
}

installed() {
  [ -f "$DIR/pkg.lock" ] && grep "$1" $DIR/pkg.lock >/dev/null
  if [ $? -eq 0 ]; then
    echo "package $1 already installed"
    return 1
  fi
  return 0
}

install() {
  echo "checking mirror..."
  for PKG in $@; do
    if ! exists "$PKG"; then
    echo "$PKG does not exist"
    exit 1
    fi

    if ! installed "$PKG"; then
    exit 1
    fi

    read -p "Are you sure you want to install $PKG? [Y/n]: " ANSWER
    case $ANSWER in
    "Y") ;;

    *)
    echo "installation of $PKG aborted"
    exit 1
    ;;
    esac
    echo "Installing $PKG" 1>&2
    echo "installing from $URL/sources/$PKG.php" 1>&2
    curl "$URL/sources/$PKG.php" 2>/dev/null | sed "s/<br>//g" >> "$DIR/../words/$PKG.txt"
    echo "$PKG" >>"$DIR/pkg.lock"
  done
}

remove() {
  for PKG in $@; do
    if ! exists "$PKG"; then
    echo "$PKG does not exist"
    exit 1
    fi
    read -p "Are you sure you want to uninstall $PKG? [Y/n]: " ANSWER
    case $ANSWER in
    "Y") ;;
    *)
    echo "removal of $PKG aborted"
    exit 1
    ;;
    esac
    rm -rf "$DIR/../words/$PKG.txt"
    grep -v "$PKG" "$DIR/pkg.lock" >>"$DIR/pkg.lock.tmp"
    mv "$DIR/pkg.lock.tmp" "$DIR/pkg.lock"
  done
}

CMD=$1
shift
case "$CMD" in
    "install")
        install $@
    ;;
    "remove")
        remove $@
    ;;
    "search")
        search $@
    ;;
    "list")
        list $@
    ;;
    "-h")
        less $DIR/README.md
    ;;
    *)
        echo "Undefined command $CMD." 1>&2
        exit 127
    ;;
esac
